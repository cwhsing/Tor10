Help on module pyuni10:

NAME
    pyuni10

CLASSES
    pybind11_builtins.pybind11_object(builtins.object)
        Bond
        Network
        Qnum
        UniTensorC
        UniTensorR
        bondType
        contain_type
        parityFType
        parityType
    
    class Bond(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Bond
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Qlist(...)
     |      Qlist(self: pyuni10.Bond) -> List[pyuni10.Qnum]
     |  
     |  TypeId(...)
     |      TypeId(self: pyuni10.Bond) -> None
     |  
     |  WithSymmetry(...)
     |      WithSymmetry(self: pyuni10.Bond) -> bool
     |  
     |  __eq__(...)
     |      __eq__(self: pyuni10.Bond, arg0: pyuni10.Bond) -> bool
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pyuni10.Bond, tp: pyuni10.bondType, dim: int) -> None
     |      
     |      2. __init__(self: pyuni10.Bond, tp: pyuni10.bondType, qnums: List[pyuni10.Qnum]) -> None
     |      
     |      3. __init__(self: pyuni10.Bond, bd: pyuni10.Bond) -> None
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.Bond) -> str
     |  
     |  assign(...)
     |      assign(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. assign(self: pyuni10.Bond, tp: pyuni10.bondType, dim: int) -> None
     |      
     |      2. assign(self: pyuni10.Bond, tp: pyuni10.bondType, qnums: List[pyuni10.Qnum]) -> None
     |  
     |  change(...)
     |      change(self: pyuni10.Bond, arg0: pyuni10.bondType) -> pyuni10.Bond
     |  
     |  combine(...)
     |      combine(self: pyuni10.Bond, arg0: pyuni10.Bond) -> pyuni10.Bond
     |  
     |  degeneracy(...)
     |      degeneracy(self: pyuni10.Bond) -> Dict[pyuni10.Qnum, int]
     |  
     |  dim(...)
     |      dim(self: pyuni10.Bond) -> int
     |  
     |  dummy_change(...)
     |      dummy_change(self: pyuni10.Bond, arg0: pyuni10.bondType) -> pyuni10.Bond
     |  
     |  type(...)
     |      type(self: pyuni10.Bond) -> pyuni10.bondType
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Network(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Network
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  GetContractOrder(...)
     |      GetContractOrder(self: pyuni10.Network) -> str
     |  
     |  Launch(...)
     |      Launch(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Launch(self: pyuni10.Network, Tout: pyuni10.UniTensorR, Tname: str='') -> None
     |      
     |      2. Launch(self: pyuni10.Network, Tout: pyuni10.UniTensorC, Tname: str='') -> None
     |  
     |  PreConstruct(...)
     |      PreConstruct(self: pyuni10.Network, force: bool=True) -> None
     |  
     |  PutTensor(...)
     |      PutTensor(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. PutTensor(self: pyuni10.Network, idx: int, UniT: pyuni10.UniTensorR, force: bool=True) -> None
     |      
     |      2. PutTensor(self: pyuni10.Network, idx: int, UniT: pyuni10.UniTensorC, force: bool=True) -> None
     |      
     |      3. PutTensor(self: pyuni10.Network, name: str, UniT: pyuni10.UniTensorR, force: bool=True) -> None
     |      
     |      4. PutTensor(self: pyuni10.Network, name: str, UniT: pyuni10.UniTensorC, force: bool=True) -> None
     |  
     |  PutTensorD(...)
     |      PutTensorD(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. PutTensorD(self: pyuni10.Network, idx: int, UniT: pyuni10.UniTensorR, force: bool=True) -> None
     |      
     |      2. PutTensorD(self: pyuni10.Network, idx: int, UniT: pyuni10.UniTensorC, force: bool=True) -> None
     |      
     |      3. PutTensorD(self: pyuni10.Network, name: str, UniT: pyuni10.UniTensorR, force: bool=True) -> None
     |      
     |      4. PutTensorD(self: pyuni10.Network, name: str, UniT: pyuni10.UniTensorC, force: bool=True) -> None
     |  
     |  PutTensorT(...)
     |      PutTensorT(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. PutTensorT(self: pyuni10.Network, idx: int, UniT: pyuni10.UniTensorR, force: bool=True) -> None
     |      
     |      2. PutTensorT(self: pyuni10.Network, idx: int, UniT: pyuni10.UniTensorC, force: bool=True) -> None
     |      
     |      3. PutTensorT(self: pyuni10.Network, name: str, UniT: pyuni10.UniTensorR, force: bool=True) -> None
     |      
     |      4. PutTensorT(self: pyuni10.Network, name: str, UniT: pyuni10.UniTensorC, force: bool=True) -> None
     |  
     |  __init__(...)
     |      __init__(self: pyuni10.Network, fname: str) -> None
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.Network) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Qnum(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Qnum
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  U1(...)
     |      U1(self: pyuni10.Qnum) -> int
     |  
     |  __eq__(...)
     |      __eq__(self: pyuni10.Qnum, arg0: pyuni10.Qnum) -> bool
     |  
     |  __hash__(...)
     |      __hash__(self: pyuni10.Qnum) -> int
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pyuni10.Qnum, U1: int=0, prt: pyuni10.parityType=parityType.PRT_EVEN) -> None
     |      
     |      2. __init__(self: pyuni10.Qnum, prtF: pyuni10.parityFType, U1: int=0, prt: pyuni10.parityType=parityType.PRT_EVEN) -> None
     |      
     |      3. __init__(self: pyuni10.Qnum, arg0: pyuni10.Qnum) -> None
     |  
     |  __le__(...)
     |      __le__(self: pyuni10.Qnum, arg0: pyuni10.Qnum) -> bool
     |  
     |  __lt__(...)
     |      __lt__(self: pyuni10.Qnum, arg0: pyuni10.Qnum) -> bool
     |  
     |  __mul__(...)
     |      __mul__(self: pyuni10.Qnum, arg0: pyuni10.Qnum) -> pyuni10.Qnum
     |  
     |  __neg__(...)
     |      __neg__(self: pyuni10.Qnum) -> pyuni10.Qnum
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.Qnum) -> str
     |  
     |  assign(...)
     |      assign(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. assign(self: pyuni10.Qnum, U1: int=0, prt: pyuni10.parityType=parityType.PRT_EVEN) -> None
     |      
     |      2. assign(self: pyuni10.Qnum, prtF: pyuni10.parityFType, U1: int=0, prt: pyuni10.parityType=parityType.PRT_EVEN) -> None
     |  
     |  isFermionic(...) from builtins.PyCapsule
     |      isFermionic() -> bool
     |  
     |  prt(...)
     |      prt(self: pyuni10.Qnum) -> pyuni10.parityType
     |  
     |  prtF(...)
     |      prtF(self: pyuni10.Qnum) -> pyuni10.parityFType
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  Fermionic
     |  
     |  m_U1
     |  
     |  m_prt
     |  
     |  m_prtF
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class UniTensorC(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      UniTensorC
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Assign(...)
     |      Assign(self: pyuni10.UniTensorC, _bond: List[pyuni10.Bond]) -> pyuni10.UniTensorC
     |  
     |  At(...)
     |      At(self: pyuni10.UniTensorC, idxs: List[int]) -> complex
     |  
     |  BlockNum(...)
     |      BlockNum(self: pyuni10.UniTensorC) -> int
     |  
     |  BlockQnum(...)
     |      BlockQnum(self: pyuni10.UniTensorC, idx: int) -> pyuni10.Qnum
     |  
     |  BlocksQnum(...)
     |      BlocksQnum(self: pyuni10.UniTensorC) -> List[pyuni10.Qnum]
     |  
     |  BondNum(...)
     |      BondNum(self: pyuni10.UniTensorC) -> int
     |  
     |  Clear(...)
     |      Clear(self: pyuni10.UniTensorC) -> None
     |  
     |  CombineBond(...)
     |      CombineBond(self: pyuni10.UniTensorC, combined_labels: List[int]) -> pyuni10.UniTensorC
     |  
     |  ElemNum(...)
     |      ElemNum(self: pyuni10.UniTensorC) -> int
     |  
     |  GetBlock(...)
     |      GetBlock(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. GetBlock(self: pyuni10.UniTensorC, diag: bool=False) -> array
     |      
     |      2. GetBlock(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum, diag: bool=False) -> array
     |  
     |  GetBlocks(...)
     |      GetBlocks(self: pyuni10.UniTensorC) -> Dict[pyuni10.Qnum, array]
     |  
     |  GetElem(...)
     |      GetElem(self: pyuni10.UniTensorC) -> array
     |  
     |  GetName(...)
     |      GetName(self: pyuni10.UniTensorC) -> str
     |  
     |  GetRawElem(...)
     |      GetRawElem(self: pyuni10.UniTensorC) -> array
     |  
     |  Identity(...)
     |      Identity(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Identity(self: pyuni10.UniTensorC) -> None
     |      
     |      2. Identity(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum) -> None
     |  
     |  InBondNum(...)
     |      InBondNum(self: pyuni10.UniTensorC) -> int
     |  
     |  Load(...)
     |      Load(self: pyuni10.UniTensorC, fname: str) -> None
     |  
     |  Ones(...)
     |      Ones(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Ones(self: pyuni10.UniTensorC) -> None
     |      
     |      2. Ones(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum) -> None
     |  
     |  OrthoRand(...)
     |      OrthoRand(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. OrthoRand(self: pyuni10.UniTensorC, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |      
     |      2. OrthoRand(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |  
     |  PrintDiagram(...)
     |      PrintDiagram(self: pyuni10.UniTensorC) -> None
     |  
     |  PrintRawElem(...)
     |      PrintRawElem(self: pyuni10.UniTensorC, print: bool=True) -> str
     |  
     |  Profile(...)
     |      Profile(self: pyuni10.UniTensorC, print: bool=True) -> str
     |  
     |  PutBlock(...)
     |      PutBlock(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. PutBlock(self: pyuni10.UniTensorC, mat: numpy.ndarray[complex128]) -> None
     |      
     |      2. PutBlock(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum, mat: numpy.ndarray[complex128]) -> None
     |  
     |  Randomize(...)
     |      Randomize(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Randomize(self: pyuni10.UniTensorC, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |      
     |      2. Randomize(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |  
     |  Save(...)
     |      Save(self: pyuni10.UniTensorC, fname: str) -> None
     |  
     |  SetElem(...)
     |      SetElem(self: pyuni10.UniTensorC, _elem: List[complex]) -> None
     |  
     |  SetLabel(...)
     |      SetLabel(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. SetLabel(self: pyuni10.UniTensorC, newLabel: int, idx: int) -> None
     |      
     |      2. SetLabel(self: pyuni10.UniTensorC, newLabels: List[int]) -> None
     |  
     |  SetName(...)
     |      SetName(self: pyuni10.UniTensorC, _name: str) -> None
     |  
     |  SetRawElem(...)
     |      SetRawElem(self: pyuni10.UniTensorC, blk: numpy.ndarray[complex128]) -> None
     |  
     |  TypeId(...)
     |      TypeId(self: pyuni10.UniTensorC) -> int
     |  
     |  Zeros(...)
     |      Zeros(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Zeros(self: pyuni10.UniTensorC) -> None
     |      
     |      2. Zeros(self: pyuni10.UniTensorC, qnum: pyuni10.Qnum) -> None
     |  
     |  __add__(...)
     |      __add__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __add__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorC) -> pyuni10.UniTensorC
     |      
     |      2. __add__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorC
     |  
     |  __iadd__(...)
     |      __iadd__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __iadd__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorC) -> pyuni10.UniTensorC
     |      
     |      2. __iadd__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorC
     |  
     |  __imul__(...)
     |      __imul__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __imul__(self: pyuni10.UniTensorC, arg0: float) -> pyuni10.UniTensorC
     |      
     |      2. __imul__(self: pyuni10.UniTensorC, arg0: complex) -> pyuni10.UniTensorC
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pyuni10.UniTensorC, val: complex, s: pyuni10.contain_type=contain_type.no_sym) -> None
     |      
     |      2. __init__(self: pyuni10.UniTensorC, _bonds: List[pyuni10.Bond]=[], _name: str='') -> None
     |      
     |      3. __init__(self: pyuni10.UniTensorC, _bonds: List[pyuni10.Bond]=[], labels: List[int], _name: str='') -> None
     |      
     |      4. __init__(self: pyuni10.UniTensorC, arg0: numpy.ndarray[complex128]) -> None
     |      
     |      5. __init__(self: pyuni10.UniTensorC, UniT: pyuni10.UniTensorC) -> None
     |      
     |      6. __init__(self: pyuni10.UniTensorC, fname: str) -> None
     |  
     |  __isub__(...)
     |      __isub__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __isub__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorC) -> pyuni10.UniTensorC
     |      
     |      2. __isub__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorC
     |  
     |  __mul__(...)
     |      __mul__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __mul__(self: pyuni10.UniTensorC, arg0: float) -> pyuni10.UniTensorC
     |      
     |      2. __mul__(self: pyuni10.UniTensorC, arg0: complex) -> pyuni10.UniTensorC
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.UniTensorC) -> str
     |  
     |  __rmul__(...)
     |      __rmul__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __rmul__(self: pyuni10.UniTensorC, arg0: float) -> pyuni10.UniTensorC
     |      
     |      2. __rmul__(self: pyuni10.UniTensorC, arg0: complex) -> pyuni10.UniTensorC
     |  
     |  __sub__(...)
     |      __sub__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __sub__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorC) -> pyuni10.UniTensorC
     |      
     |      2. __sub__(self: pyuni10.UniTensorC, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorC
     |  
     |  bond(...)
     |      bond(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. bond(self: pyuni10.UniTensorC) -> List[pyuni10.Bond]
     |      
     |      2. bond(self: pyuni10.UniTensorC, idx: int) -> pyuni10.Bond
     |  
     |  label(...)
     |      label(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. label(self: pyuni10.UniTensorC) -> List[int]
     |      
     |      2. label(self: pyuni10.UniTensorC, arg0: int) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class UniTensorR(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      UniTensorR
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Assign(...)
     |      Assign(self: pyuni10.UniTensorR, _bond: List[pyuni10.Bond]) -> pyuni10.UniTensorR
     |  
     |  At(...)
     |      At(self: pyuni10.UniTensorR, idxs: List[int]) -> float
     |  
     |  BlockNum(...)
     |      BlockNum(self: pyuni10.UniTensorR) -> int
     |  
     |  BlockQnum(...)
     |      BlockQnum(self: pyuni10.UniTensorR, idx: int) -> pyuni10.Qnum
     |  
     |  BlocksQnum(...)
     |      BlocksQnum(self: pyuni10.UniTensorR) -> List[pyuni10.Qnum]
     |  
     |  BondNum(...)
     |      BondNum(self: pyuni10.UniTensorR) -> int
     |  
     |  Clear(...)
     |      Clear(self: pyuni10.UniTensorR) -> None
     |  
     |  CombineBond(...)
     |      CombineBond(self: pyuni10.UniTensorR, combined_labels: List[int]) -> pyuni10.UniTensorR
     |  
     |  ElemNum(...)
     |      ElemNum(self: pyuni10.UniTensorR) -> int
     |  
     |  GetBlock(...)
     |      GetBlock(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. GetBlock(self: pyuni10.UniTensorR, diag: bool=False) -> array
     |      
     |      2. GetBlock(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum, diag: bool=False) -> array
     |  
     |  GetBlocks(...)
     |      GetBlocks(self: pyuni10.UniTensorR) -> Dict[pyuni10.Qnum, array]
     |  
     |  GetElem(...)
     |      GetElem(self: pyuni10.UniTensorR) -> array
     |  
     |  GetName(...)
     |      GetName(self: pyuni10.UniTensorR) -> str
     |  
     |  GetRawElem(...)
     |      GetRawElem(self: pyuni10.UniTensorR) -> array
     |  
     |  Identity(...)
     |      Identity(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Identity(self: pyuni10.UniTensorR) -> None
     |      
     |      2. Identity(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum) -> None
     |  
     |  InBondNum(...)
     |      InBondNum(self: pyuni10.UniTensorR) -> int
     |  
     |  Load(...)
     |      Load(self: pyuni10.UniTensorR, fname: str) -> None
     |  
     |  Ones(...)
     |      Ones(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Ones(self: pyuni10.UniTensorR) -> None
     |      
     |      2. Ones(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum) -> None
     |  
     |  OrthoRand(...)
     |      OrthoRand(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. OrthoRand(self: pyuni10.UniTensorR, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |      
     |      2. OrthoRand(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |  
     |  PrintDiagram(...)
     |      PrintDiagram(self: pyuni10.UniTensorR) -> None
     |  
     |  PrintRawElem(...)
     |      PrintRawElem(self: pyuni10.UniTensorR, print: bool=True) -> str
     |  
     |  Profile(...)
     |      Profile(self: pyuni10.UniTensorR, print: bool=True) -> str
     |  
     |  PutBlock(...)
     |      PutBlock(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. PutBlock(self: pyuni10.UniTensorR, mat: numpy.ndarray[float64]) -> None
     |      
     |      2. PutBlock(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum, mat: numpy.ndarray[float64]) -> None
     |  
     |  Randomize(...)
     |      Randomize(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Randomize(self: pyuni10.UniTensorR, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |      
     |      2. Randomize(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum, UorN: str='U', dn_mu: float=-1, up_var: float=1, seed: int=-1) -> None
     |  
     |  Save(...)
     |      Save(self: pyuni10.UniTensorR, fname: str) -> None
     |  
     |  SetElem(...)
     |      SetElem(self: pyuni10.UniTensorR, _elem: List[float]) -> None
     |  
     |  SetLabel(...)
     |      SetLabel(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. SetLabel(self: pyuni10.UniTensorR, newLabel: int, idx: int) -> None
     |      
     |      2. SetLabel(self: pyuni10.UniTensorR, newLabels: List[int]) -> None
     |  
     |  SetName(...)
     |      SetName(self: pyuni10.UniTensorR, _name: str) -> None
     |  
     |  SetRawElem(...)
     |      SetRawElem(self: pyuni10.UniTensorR, blk: numpy.ndarray[float64]) -> None
     |  
     |  TypeId(...)
     |      TypeId(self: pyuni10.UniTensorR) -> int
     |  
     |  Zeros(...)
     |      Zeros(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Zeros(self: pyuni10.UniTensorR) -> None
     |      
     |      2. Zeros(self: pyuni10.UniTensorR, qnum: pyuni10.Qnum) -> None
     |  
     |  __add__(...)
     |      __add__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __add__(self: pyuni10.UniTensorR, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorR
     |      
     |      2. __add__(self: pyuni10.UniTensorR, arg0: uni10::UniTensor<std::complex<double> >) -> uni10::UniTensor<std::complex<double> >
     |  
     |  __iadd__(...)
     |      __iadd__(self: pyuni10.UniTensorR, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorR
     |  
     |  __imul__(...)
     |      __imul__(self: pyuni10.UniTensorR, arg0: float) -> pyuni10.UniTensorR
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pyuni10.UniTensorR, val: float, s: pyuni10.contain_type=contain_type.no_sym) -> None
     |      
     |      2. __init__(self: pyuni10.UniTensorR, _bonds: List[pyuni10.Bond]=[], _name: str='') -> None
     |      
     |      3. __init__(self: pyuni10.UniTensorR, _bonds: List[pyuni10.Bond]=[], labels: List[int], _name: str='') -> None
     |      
     |      4. __init__(self: pyuni10.UniTensorR, arg0: numpy.ndarray[float64]) -> None
     |      
     |      5. __init__(self: pyuni10.UniTensorR, UniT: pyuni10.UniTensorR) -> None
     |      
     |      6. __init__(self: pyuni10.UniTensorR, fname: str) -> None
     |  
     |  __isub__(...)
     |      __isub__(self: pyuni10.UniTensorR, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorR
     |  
     |  __mul__(...)
     |      __mul__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __mul__(self: pyuni10.UniTensorR, arg0: float) -> pyuni10.UniTensorR
     |      
     |      2. __mul__(self: pyuni10.UniTensorR, arg0: complex) -> uni10::UniTensor<std::complex<double> >
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.UniTensorR) -> str
     |  
     |  __rmul__(...)
     |      __rmul__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __rmul__(self: pyuni10.UniTensorR, arg0: float) -> pyuni10.UniTensorR
     |      
     |      2. __rmul__(self: pyuni10.UniTensorR, arg0: complex) -> uni10::UniTensor<std::complex<double> >
     |  
     |  __sub__(...)
     |      __sub__(self: pyuni10.UniTensorR, arg0: pyuni10.UniTensorR) -> pyuni10.UniTensorR
     |  
     |  bond(...)
     |      bond(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. bond(self: pyuni10.UniTensorR) -> List[pyuni10.Bond]
     |      
     |      2. bond(self: pyuni10.UniTensorR, idx: int) -> pyuni10.Bond
     |  
     |  label(...)
     |      label(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. label(self: pyuni10.UniTensorR) -> List[int]
     |      
     |      2. label(self: pyuni10.UniTensorR, arg0: int) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class bondType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      bondType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __eq__(self: pyuni10.bondType, arg0: pyuni10.bondType) -> bool
     |      
     |      2. __eq__(self: pyuni10.bondType, arg0: int) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pyuni10.bondType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pyuni10.bondType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pyuni10.bondType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pyuni10.bondType) -> int
     |  
     |  __ne__(...)
     |      __ne__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __ne__(self: pyuni10.bondType, arg0: pyuni10.bondType) -> bool
     |      
     |      2. __ne__(self: pyuni10.bondType, arg0: int) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.bondType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pyuni10.bondType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  BD_IN = bondType.BD_IN
     |  
     |  BD_OUT = bondType.BD_OUT
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class contain_type(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      contain_type
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __eq__(self: pyuni10.contain_type, arg0: pyuni10.contain_type) -> bool
     |      
     |      2. __eq__(self: pyuni10.contain_type, arg0: int) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pyuni10.contain_type) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pyuni10.contain_type) -> int
     |  
     |  __init__(...)
     |      __init__(self: pyuni10.contain_type, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pyuni10.contain_type) -> int
     |  
     |  __ne__(...)
     |      __ne__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __ne__(self: pyuni10.contain_type, arg0: pyuni10.contain_type) -> bool
     |      
     |      2. __ne__(self: pyuni10.contain_type, arg0: int) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.contain_type) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pyuni10.contain_type, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  bs_sym = contain_type.bs_sym
     |  
     |  fm_sym = contain_type.fm_sym
     |  
     |  no_sym = contain_type.no_sym
     |  
     |  spar_sym = contain_type.spar_sym
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class parityFType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      parityFType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __eq__(self: pyuni10.parityFType, arg0: pyuni10.parityFType) -> bool
     |      
     |      2. __eq__(self: pyuni10.parityFType, arg0: int) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pyuni10.parityFType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pyuni10.parityFType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pyuni10.parityFType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pyuni10.parityFType) -> int
     |  
     |  __ne__(...)
     |      __ne__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __ne__(self: pyuni10.parityFType, arg0: pyuni10.parityFType) -> bool
     |      
     |      2. __ne__(self: pyuni10.parityFType, arg0: int) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.parityFType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pyuni10.parityFType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  PRTF_EVEN = parityFType.PRTF_EVEN
     |  
     |  PRTF_ODD = parityFType.PRTF_ODD
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class parityType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      parityType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __eq__(self: pyuni10.parityType, arg0: pyuni10.parityType) -> bool
     |      
     |      2. __eq__(self: pyuni10.parityType, arg0: int) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pyuni10.parityType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pyuni10.parityType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pyuni10.parityType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pyuni10.parityType) -> int
     |  
     |  __ne__(...)
     |      __ne__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __ne__(self: pyuni10.parityType, arg0: pyuni10.parityType) -> bool
     |      
     |      2. __ne__(self: pyuni10.parityType, arg0: int) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pyuni10.parityType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pyuni10.parityType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  PRT_EVEN = parityType.PRT_EVEN
     |  
     |  PRT_ODD = parityType.PRT_ODD
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.

FUNCTIONS
    Conj(...) method of builtins.PyCapsule instance
        Conj(*args, **kwargs)
        Overloaded function.
        
        1. Conj(kten: pyuni10.UniTensorR) -> pyuni10.UniTensorR
        
        2. Conj(kten: pyuni10.UniTensorC) -> pyuni10.UniTensorC
    
    Contract(...) method of builtins.PyCapsule instance
        Contract(*args, **kwargs)
        Overloaded function.
        
        1. Contract(Ta: pyuni10.UniTensorR, Tb: pyuni10.UniTensorR) -> pyuni10.UniTensorR
        
        2. Contract(Ta: pyuni10.UniTensorR, Tb: pyuni10.UniTensorC) -> pyuni10.UniTensorC
        
        3. Contract(Ta: pyuni10.UniTensorC, Tb: pyuni10.UniTensorR) -> pyuni10.UniTensorC
        
        4. Contract(Ta: pyuni10.UniTensorC, Tb: pyuni10.UniTensorC) -> pyuni10.UniTensorC
    
    Dagger(...) method of builtins.PyCapsule instance
        Dagger(*args, **kwargs)
        Overloaded function.
        
        1. Dagger(kten: pyuni10.UniTensorR) -> pyuni10.UniTensorR
        
        2. Dagger(kten: pyuni10.UniTensorC) -> pyuni10.UniTensorC
    
    Hosvd(...) method of builtins.PyCapsule instance
        Hosvd(*args, **kwargs)
        Overloaded function.
        
        1. Hosvd(Tin: pyuni10.UniTensorR, group_labels: int, groups: int, groupsSize: int, Us: List[pyuni10.UniTensorR], S: pyuni10.UniTensorR, Ls: List[Dict[pyuni10.Qnum, uni10::Matrix<double>]], on: uni10::UNI10_INPLACE) -> None
        
        2. Hosvd(Tin: pyuni10.UniTensorC, group_labels: int, groups: int, groupsSize: int, Us: List[pyuni10.UniTensorC], S: pyuni10.UniTensorC, Ls: List[Dict[pyuni10.Qnum, uni10::Matrix<std::complex<double> >]], on: uni10::UNI10_INPLACE) -> None
        
        3. Hosvd(Tin: pyuni10.UniTensorR, group_labels: int, groups: int, groupsSize: int, Us: List[pyuni10.UniTensorR], S: pyuni10.UniTensorR, Ls: List[uni10::Matrix<double>], on: uni10::UNI10_INPLACE) -> None
        
        4. Hosvd(Tin: pyuni10.UniTensorC, group_labels: int, groups: int, groupsSize: int, Us: List[pyuni10.UniTensorC], S: pyuni10.UniTensorC, Ls: List[uni10::Matrix<std::complex<double> >], on: uni10::UNI10_INPLACE) -> None
    
    Otimes(...) method of builtins.PyCapsule instance
        Otimes(*args, **kwargs)
        Overloaded function.
        
        1. Otimes(Ta: pyuni10.UniTensorR, Tb: pyuni10.UniTensorR) -> pyuni10.UniTensorR
        
        2. Otimes(Ta: pyuni10.UniTensorR, Tb: pyuni10.UniTensorC) -> pyuni10.UniTensorC
        
        3. Otimes(Ta: pyuni10.UniTensorC, Tb: pyuni10.UniTensorR) -> pyuni10.UniTensorC
        
        4. Otimes(Ta: pyuni10.UniTensorC, Tb: pyuni10.UniTensorC) -> pyuni10.UniTensorC
    
    PartialTrace(...) method of builtins.PyCapsule instance
        PartialTrace(*args, **kwargs)
        Overloaded function.
        
        1. PartialTrace(Tin: pyuni10.UniTensorR, la: int, lb: int) -> pyuni10.UniTensorR
        
        2. PartialTrace(Tin: pyuni10.UniTensorC, la: int, lb: int) -> pyuni10.UniTensorC
    
    Permute(...) method of builtins.PyCapsule instance
        Permute(*args, **kwargs)
        Overloaded function.
        
        1. Permute(T: pyuni10.UniTensorR, newLabels: List[int], inBondNum: int) -> pyuni10.UniTensorR
        
        2. Permute(T: pyuni10.UniTensorC, newLabels: List[int], inBondNum: int) -> pyuni10.UniTensorC
        
        3. Permute(T: pyuni10.UniTensorR, rowBondNum: int) -> pyuni10.UniTensorR
        
        4. Permute(T: pyuni10.UniTensorC, rowBondNum: int) -> pyuni10.UniTensorC
    
    PseudoContract(...) method of builtins.PyCapsule instance
        PseudoContract(*args, **kwargs)
        Overloaded function.
        
        1. PseudoContract(Ta: pyuni10.UniTensorR, Tb: pyuni10.UniTensorR) -> pyuni10.UniTensorR
        
        2. PseudoContract(Ta: pyuni10.UniTensorR, Tb: pyuni10.UniTensorC) -> pyuni10.UniTensorC
        
        3. PseudoContract(Ta: pyuni10.UniTensorC, Tb: pyuni10.UniTensorR) -> pyuni10.UniTensorC
        
        4. PseudoContract(Ta: pyuni10.UniTensorC, Tb: pyuni10.UniTensorC) -> pyuni10.UniTensorC
    
    PseudoPermute(...) method of builtins.PyCapsule instance
        PseudoPermute(*args, **kwargs)
        Overloaded function.
        
        1. PseudoPermute(T: pyuni10.UniTensorR, newLabels: List[int], inBondNum: int) -> pyuni10.UniTensorR
        
        2. PseudoPermute(T: pyuni10.UniTensorR, newLabels: List[int], inBondNum: int) -> pyuni10.UniTensorR
        
        3. PseudoPermute(T: pyuni10.UniTensorR, rowBondNum: int) -> pyuni10.UniTensorR
        
        4. PseudoPermute(T: pyuni10.UniTensorC, rowBondNum: int) -> pyuni10.UniTensorC
    
    Trace(...) method of builtins.PyCapsule instance
        Trace(*args, **kwargs)
        Overloaded function.
        
        1. Trace(Tin: pyuni10.UniTensorR) -> float
        
        2. Trace(Tin: pyuni10.UniTensorC) -> complex
    
    Transpose(...) method of builtins.PyCapsule instance
        Transpose(*args, **kwargs)
        Overloaded function.
        
        1. Transpose(kten: pyuni10.UniTensorR) -> pyuni10.UniTensorR
        
        2. Transpose(kten: pyuni10.UniTensorC) -> pyuni10.UniTensorC
    
    combine(...) method of builtins.PyCapsule instance
        combine(*args, **kwargs)
        Overloaded function.
        
        1. combine(tp: pyuni10.bondType, bds: List[pyuni10.Bond]) -> pyuni10.Bond
        
        2. combine(bds: List[pyuni10.Bond]) -> pyuni10.Bond

DATA
    BD_IN = bondType.BD_IN
    BD_OUT = bondType.BD_OUT
    PRTF_EVEN = parityFType.PRTF_EVEN
    PRTF_ODD = parityFType.PRTF_ODD
    PRT_EVEN = parityType.PRT_EVEN
    PRT_ODD = parityType.PRT_ODD
    bs_sym = contain_type.bs_sym
    fm_sym = contain_type.fm_sym
    no_sym = contain_type.no_sym
    spar_sym = contain_type.spar_sym

VERSION
    2.0.0

FILE
    /home/kaywu/.pyenv/versions/anaconda3-5.1.0/lib/python3.6/site-packages/pyuni10.cpython-36m-x86_64-linux-gnu.so


